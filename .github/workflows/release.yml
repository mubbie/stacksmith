name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}

  windows-installer:
    needs: goreleaser
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Inno Setup & 7-Zip
        run: choco install innosetup 7zip.install -y

      - name: Download Windows release archive
        run: |
          $version = "${{ needs.goreleaser.outputs.version }}"
          $url = "https://github.com/mubbie/stacksmith/releases/download/v$version/stacksmith_${version}_windows_amd64.zip"
          Invoke-WebRequest -Uri $url -OutFile "stacksmith.zip"

      - name: Extract binary
        run: |
          # Create a clean extraction directory
          mkdir -p extracted
          # Extract with -y flag to automatically answer yes to all prompts
          7z x stacksmith.zip -oextracted -y

      - name: Prepare installer directory
        run: |
          mkdir -p build/installer/artifact
          Copy-Item extracted/stacksmith.exe build/installer/artifact/

      - name: Build Installer
        shell: powershell
        run: |
          $env:Path += ";C:\Program Files (x86)\Inno Setup 6"
          iscc /DMyAppVersion="${{ needs.goreleaser.outputs.version }}" "./build/installer/setup.iss"

      - name: Upload installer to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.goreleaser.outputs.version }}
          files: build/installer/Output/stacksmith-setup.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  winget-manifest:
    needs: [goreleaser, windows-installer]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Installer and Calculate SHA
        run: |
          VERSION=${{ needs.goreleaser.outputs.version }}
          curl -sL https://github.com/mubbie/stacksmith/releases/download/v${VERSION}/stacksmith-setup.exe -o installer.exe
          echo "INSTALLER_SHA=$(sha256sum installer.exe | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Generate winget manifest files
        run: |
          VERSION=${{ needs.goreleaser.outputs.version }}
          mkdir -p ./manifests/m/Mubbie/Stacksmith/${VERSION}

          cat > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.installer.yaml << EOF
          PackageIdentifier: Mubbie.Stacksmith
          PackageVersion: ${VERSION}
          InstallerType: inno
          Installers:
            - Architecture: x64
              InstallerUrl: https://github.com/mubbie/stacksmith/releases/download/v${VERSION}/stacksmith-setup.exe
              InstallerSha256: ${INSTALLER_SHA}
          ManifestType: installer
          ManifestVersion: 1.4.0
          EOF

          cat > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.locale.en-US.yaml << EOF
          PackageIdentifier: Mubbie.Stacksmith
          PackageVersion: ${VERSION}
          PackageLocale: en-US
          Publisher: Mubbie
          PackageName: Stacksmith
          License: MIT
          ShortDescription: Ultralight Artisan Git Stacking Tool
          ManifestType: defaultLocale
          ManifestVersion: 1.4.0
          EOF

          cat > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.yaml << EOF
          PackageIdentifier: Mubbie.Stacksmith
          PackageVersion: ${VERSION}
          DefaultLocale: en-US
          ManifestType: version
          ManifestVersion: 1.4.0
          EOF

      - name: Create Fork via API
        run: |
          # Create fork using GitHub API
          curl -X POST \
            -H "Authorization: token ${{ secrets.WINGET_PR_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/microsoft/winget-pkgs/forks
          
          # Wait for fork creation to complete (this can take a few seconds)
          echo "Waiting for fork to be created..."
          sleep 30

      - name: Setup Git and Create PR
        run: |
          VERSION=${{ needs.goreleaser.outputs.version }}
          PAT=${{ secrets.WINGET_PR_TOKEN }}
          
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Clone the fork (retry a few times if needed)
          for i in {1..5}; do
            echo "Attempt $i to clone the fork..."
            git clone https://${PAT}@github.com/${{ github.repository_owner }}/winget-pkgs.git && break || sleep 15
          done
          
          cd winget-pkgs
          
          # Create new branch
          git checkout -b stacksmith-${VERSION}
          
          # Create directories and copy files
          mkdir -p manifests/m/Mubbie/Stacksmith/${VERSION}
          cp ../manifests/m/Mubbie/Stacksmith/${VERSION}/* manifests/m/Mubbie/Stacksmith/${VERSION}/
          
          # Commit changes
          git add manifests/m/Mubbie/Stacksmith/${VERSION}
          git commit -m "Add Stacksmith ${VERSION}"
          
          # Push to fork
          git push -u origin stacksmith-${VERSION} --force
          
          # Create PR using curl
          curl -X POST \
            -H "Authorization: token ${PAT}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/microsoft/winget-pkgs/pulls \
            -d '{
              "title": "Add Stacksmith '"${VERSION}"'",
              "body": "Add Stacksmith version '"${VERSION}"' to winget. PR created by GitHub Actions.",
              "head": "'"${{ github.repository_owner }}"':stacksmith-'"${VERSION}"'",
              "base": "master"
            }'