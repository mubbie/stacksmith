name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate completions
        run: |
          mkdir -p completions
          go run main.go completion bash > completions/stacksmith.bash
          go run main.go completion zsh > completions/stacksmith.zsh
          go run main.go completion fish > completions/stacksmith.fish

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-installer:
    needs: goreleaser
    runs-on: windows-latest

    steps:
      - name: Install Inno Setup & 7-Zip
        run: choco install innosetup 7zip.install -y

      - name: Download Windows release archive
        run: |
          $version = "${{ needs.goreleaser.outputs.version }}"
          $url = "https://github.com/mubbie/stacksmith/releases/download/v$version/stacksmith_${version}_windows_amd64.zip"
          Invoke-WebRequest -Uri $url -OutFile "stacksmith.zip"

      - name: Extract binary
        run: 7z x stacksmith.zip -oartifact

      - name: Copy binary into installer directory
        run: |
          mkdir installer\artifact
          move artifact\stacksmith.exe installer\artifact\stacksmith.exe

      - name: Build Inno Setup installer
        run: iscc /DMyAppVersion="${{ needs.goreleaser.outputs.version }}" installer/setup.iss

      - name: Upload installer to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: installer/Output/stacksmith-setup.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  winget-manifest:
    needs: [goreleaser, windows-installer]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Installer and Calculate SHA
        run: |
          VERSION=${{ needs.goreleaser.outputs.version }}
          curl -sL https://github.com/mubbie/stacksmith/releases/download/v${VERSION}/stacksmith-setup.exe -o installer.exe
          echo "INSTALLER_SHA=$(sha256sum installer.exe | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Generate winget manifest files
        run: |
          VERSION=${{ needs.goreleaser.outputs.version }}
          mkdir -p ./manifests/m/Mubbie/Stacksmith/${VERSION}

          echo "PackageIdentifier: Mubbie.Stacksmith
            PackageVersion: ${VERSION}
            InstallerType: inno
            Installers:
            - Architecture: x64
                InstallerUrl: https://github.com/mubbie/stacksmith/releases/download/v${VERSION}/stacksmith-setup.exe
                InstallerSha256: ${INSTALLER_SHA}
            ManifestType: installer
            ManifestVersion: 1.4.0" > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.installer.yaml

          echo "PackageIdentifier: Mubbie.Stacksmith
            PackageVersion: ${VERSION}
            PackageLocale: en-US
            Publisher: Mubbie
            PackageName: Stacksmith
            License: MIT
            ShortDescription: Ultralight Artisan Git Stacking Tool
            ManifestType: defaultLocale
            ManifestVersion: 1.4.0" > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.locale.en-US.yaml

          echo "PackageIdentifier: Mubbie.Stacksmith
            PackageVersion: ${VERSION}
            DefaultLocale: en-US
            ManifestType: version
            ManifestVersion: 1.4.0" > ./manifests/m/Mubbie/Stacksmith/${VERSION}/Mubbie.Stacksmith.yaml

      - name: Create Pull Request to winget-pkgs
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.WINGET_PR_TOKEN }}
          path: ./manifests
          commit-message: Add Stacksmith ${{ needs.goreleaser.outputs.version }}
          title: Add Stacksmith ${{ needs.goreleaser.outputs.version }}
          body: |
            Add Stacksmith version ${{ needs.goreleaser.outputs.version }} to winget.
            PR created by GitHub Actions.
          branch: stacksmith-${{ needs.goreleaser.outputs.version }}
          base: master
          repository: microsoft/winget-pkgs